kind: pipeline
type: docker
name: cthunline-api-ci

# when to execute pipeline
trigger:
  branch:
  - master
  - dev
  event:
  - push
  - pull_request

services:
- name: postgres
  image: postgres:bookworm
  environment:
    POSTGRES_USER: cthunline
    POSTGRES_PASSWORD: cthunline
    POSTGRES_DB: cthunline_ci
- name: keydb
  image: eqalpha/keydb

steps:
# install dependencies & setup env
- name: install
  image: node:20-alpine
  pull: if-not-exists
  commands:
  - npm i
  - cp .env.ci .env.test
# linters
- name: lint
  image: node:20-alpine
  pull: if-not-exists
  commands:
  - npm run lint
  depends_on:
  - install
# tests
- name: test
  image: node:20-alpine
  pull: if-not-exists
  commands:
  - npm run test
  depends_on:
  - install
# sonarqube scan
- name: sonarqube
  image: plugins/sonarqube-scanner:v2.0.2-java17
  failure: ignore
  settings:
    sonar_host:
      from_secret: sonar_host
    sonar_token:
      from_secret: sonar_token
  depends_on:
  - test
  when:
    branch:
    - dev
    event:
    - push

---
kind: pipeline
type: docker
name: cthunline-api-cd

# when to execute pipeline
trigger:
  event:
  - tag

# disable default cloning
clone:
  disable: true

# building and publishing docker image
steps:
- name: clone
  image: alpine/git
  commands:
  - git clone https://github.com/cthunline/cthunline-docker.git .
- name: docker  
  image: plugins/docker
  settings:
    repo: cthunline/cthunline
    tags:
    - ${DRONE_TAG}
    - latest
    username:
      from_secret: docker_user
    password:
      from_secret: docker_token
    squash: true
